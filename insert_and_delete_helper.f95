MODULE INSERT_AND_DELETE

	USE CLASS_FACULTY
	USE FINDER


	IMPLICIT NONE

    CONTAINS

	INTEGER FUNCTION INSERT_OP(INPUT_STRING, FACULTY_LIST, HEAD_INT)
			CHARACTER*66 			:: INPUT_STRING
			INTEGER					:: IDNUM, EMPTY_INDEX, HEAD_INT
			CHARACTER*13			:: NAME
			CHARACTER*4				:: DEPT
			CHARACTER*9				:: RANK
			REAL					:: PAY
			TYPE(FACULTY)			:: FACULTY_MEMBER
			TYPE(FACULTY), DIMENSION(100)      :: FACULTY_LIST

			READ(INPUT_STRING, 300) IDNUM, NAME, DEPT, RANK, PAY
		300	FORMAT(3X, I8, 1X, A13, 1X, A4, 11X, A9, 8X, F9.2)
			WRITE(6, *) "** In INSERT_OP w/ ID = ", IDNUM, " NAME = ", NAME, " **"

			!create new faculty member
			FACULTY_MEMBER%IDNUM = IDNUM
			FACULTY_MEMBER%NAME = NAME
			FACULTY_MEMBER%DEPT = DEPT
			FACULTY_MEMBER%RANK = RANK
			FACULTY_MEMBER%PAY = PAY

			!point to next old first position
            FACULTY_MEMBER%NEXT_INDEX = HEAD_INT

            !find the empty index to put in
            EMPTY_INDEX = FIND_EMPTY_INDEX(FACULTY_LIST)

            !update array
            FACULTY_LIST(EMPTY_INDEX) = FACULTY_MEMBER
            WRITE (*,*) "TEST FACULTY(3) ID", FACULTY_LIST(3)%IDNUM

            !return head
            INSERT_OP = EMPTY_INDEX
	END FUNCTION INSERT_OP



	INTEGER FUNCTION FIND_EMPTY_INDEX(FACULTY_LIST)
        INTEGER					            :: EMPTY_INDEX, I
        TYPE(FACULTY)	            		:: FACULTY_MEMBER
        TYPE(FACULTY), DIMENSION(100)       :: FACULTY_LIST

        EMPTY_INDEX = -1

        DO I = 1,100,1
            IF (FACULTY_LIST(I)%IDNUM <= 0) THEN
                EMPTY_INDEX = I
                EXIT
            END IF
        END DO
        WRITE(*,*)
        FIND_EMPTY_INDEX = EMPTY_INDEX
    END FUNCTION



	SUBROUTINE DELETE_OP(INPUT_STRING, FACULTY_LIST, HEAD_INT)
            INTEGER                             :: IDNUM, INDEX, HEAD_INT
            CHARACTER*66                        :: INPUT_STRING
            TYPE(FACULTY)                       :: FACULTY_MEMBER
            TYPE(FACULTY), DIMENSION(100)       :: FACULTY_LIST

            READ(INPUT_STRING, 200) IDNUM
        200 FORMAT(3X,I8)

            !INDEX = FIND_FACULTY_MEMBER(IDNUM, FACULTY_LIST, HEAD_INDEX)


	END SUBROUTINE DELETE_OP

END MODULE INSERT_AND_DELETE
