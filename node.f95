MODULE NODE
		
		USE CLASS_FACULTY

		TYPE NODE
			TYPE(FACULTY)			:: VALUE
			TYPE (NODE), POINTER	:: NEXT
		END TYPE NODE

		SUBROUTINE PRINT_ALL(HEAD)
			USE NODE
			IMPLICIT NONE

			TYPE(NODE), POINTER		:: HEAD, PTR

			PTR => HEAD

			DO WHILE(ASSOCIATED(PTR))
				! print lots of things in here
				PTR => PTR%NEXT
			END DO
		END SUBROUTINE


		FUNCTION PRINT_INDIVIDUAL(ELEM)
			USE NODE
			IMPLICIT NONE

			!return a string here
		END FUNCTION



		FUNCTION INSERTNODE(HEAD, ELEM)
			USE NODE
			IMPLICIT NONE

			TYPE(NODE), POINTER 	:: HEAD, ELEM, INSERTNODE

			ELEM%NEXT => HEAD
			INSERTNODE => ELEM

		END FUNCTION

		SUBROUTINE DELETENODE(PREVIOUS, CURRENT)
			USE NODE
			IMPLICIT NONE

			TYPE(NODE), POINTER		:: PREVIOUS, CURRENT

			PREVIOUS%NEXT => CURRENT%NEXT
			DEALLOCATE(CURRENT)
		END SUBROUTINES


END MODULE NODE
